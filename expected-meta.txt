____________
6
((define interpreter-file
   (let ([args (command-line)])
     (if (and (pair? args) (pair? (cdr args)))
         (cadr args)
         "interpreter.scm")))
  (pretty-print '____________)
  (load interpreter-file)
  (interp*
    `(begin
       (load "top-prog.scm")
       (pretty-print (apply + '(1 2 3)))
       (pretty-print (read-sexps "test-meta-lisp.scm"))
       (pretty-print 'loading-meta)
       (load ,interpreter-file)
       (pretty-print 'end-of-loading)
       (load "test-lisp.scm"))))
loading-meta
end-of-loading
===========
************
"testing time"
simple
7
45
25
if
17
let
25
proc
25
cond
#t
fact
3628800
fact-iter-mutual
3628800
fib
89
data
(0 2 4 6)
improper-argument
((1 3 5 7) (2 4 6))
scope
(2 . 3)
3
(interp** . 25)
let*
9
named-let
55
closure
(1 2 3 4 5 6)
6
load
(11 7 1 2 3 4 5)
